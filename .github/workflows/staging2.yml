# This is a basic workflow to help you get started with Actions

name: CD STAGING

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [staging]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} & build
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Yarn
        run: npm install --global yarn

      - name: Install node dependencies
        run: yarn install

      - name: Create .env file for front end
        run: |
          touch .env.local
          cat > .env.local << EOL
          NEXT_PUBLIC_USER_TOKEN="${{ secrets.STAGING__PROGRAMIZ_PRO_API_TOKEN_FOR_PROGRAMIZ_PRO_MARKETING_WEBSITE }} "
          NEXT_PUBLIC_SEGMENT_WRITE_KEY="${{ secrets.STAGING__SEGMENT_WRITE_KEY }}"
          NEXT_PUBLIC_DASHBOARD_APP="https://staging.app.programiz.pro"
          NEXT_PUBLIC_API_BASE_URL="https://programiz-pro-staging.programiz.com"
          NEXT_PUBLIC_SENDGRID_LIST_ID="${{ secrets.NEWSLETTER_SENDGRID_LIST_ID }}"
          NEXT_PUBLIC_SENDGRID_API_KEY="${{ secrets.NEWSLETTER_SENDGRID_API_KEY }}"
          EOL

      - name: Build to .next folder
        run: |
          yarn build

      - name: Deploy to Staging server
        run: |
          mkdir ~/.ssh
          ssh-keyscan -H staging.programiz.pro >> ~/.ssh/known_hosts
          eval $(ssh-agent -s)

          # Creating private ssh file
          cat > ~/.ssh/id_rsa << EOL
          ${{ secrets.STAGING__PROGRAMIZ_PRO_MARKETING_WEBSITE_PRIVATE_SSH_KEY_GH_ACTIONS }}
          EOL

          chmod 600 ~/.ssh/id_rsa && chmod 600 ~/.ssh/known_hosts
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" public .next .env.local package.json root@staging.programiz.pro:/home/programiz/marketing-website

          ssh -i ~/.ssh/id_rsa root@staging.programiz.pro << EOL
          cd /home/programiz/marketing-website

          # husky will fail on the prod server so putting the failsafe || true
          yarn install || true

          pm2 delete marketing-site || true
          pm2 start npm --name marketing-site -- start
          EOL
